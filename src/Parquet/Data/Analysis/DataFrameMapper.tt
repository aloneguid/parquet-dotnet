<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #><#
    var valueTypes = new[] {
        "bool",
        "int",
        "uint",
        "long",
        "ulong",
        "byte",
        "sbyte",
        "DateTime",
        "TimeSpan",
        "decimal",
        "float",
        "double" };
#>using System;
using System.Numerics;
using Microsoft.Data.Analysis;

namespace Parquet.Data.Analysis {
    static class DataFrameMapper {
        public static DataFrameColumn ToDataFrameColumn(DataColumn dc) {
            <# foreach(var t in valueTypes) { #>
            if(dc.Field.ClrType == typeof(<#= t #>)) {
                if(dc.Field.ClrType == dc.Field.ClrNullableIfHasNullsType) {
                    return new PrimitiveDataFrameColumn<<#= t #>>(dc.Field.Name, (<#= t #>[])dc.Data);
                } else {
                    return new PrimitiveDataFrameColumn<<#= t #>>(dc.Field.Name, (<#= t #>?[])dc.Data);
                }
            }
            <# } #>
            // special case
            if(dc.Field.ClrType == typeof(string)) {
                return new StringDataFrameColumn(dc.Field.Name, (string[])dc.Data);
            }

            throw new NotSupportedException(dc.Field.ClrType.Name);
        }
    }
}