#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
/*
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;

using Thrift.Protocol;
using Thrift.Transport;

namespace Parquet.Thrift
{

  public partial class BloomFilterCompression : TBase
  {
    private Uncompressed _UNCOMPRESSED;

    public Uncompressed UNCOMPRESSED
    {
      get
      {
        return _UNCOMPRESSED;
      }
      set
      {
        __isset.UNCOMPRESSED = true;
        this._UNCOMPRESSED = value;
      }
    }


    public Isset __isset;
    public struct Isset {
      public bool UNCOMPRESSED;
    }

    public BloomFilterCompression() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                UNCOMPRESSED = new Uncompressed();
                UNCOMPRESSED.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("BloomFilterCompression");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (UNCOMPRESSED != null && __isset.UNCOMPRESSED) {
          field.Name = "UNCOMPRESSED";
          field.Type = TType.Struct;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          UNCOMPRESSED.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("BloomFilterCompression(");
      bool __first = true;
      if (UNCOMPRESSED != null && __isset.UNCOMPRESSED) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UNCOMPRESSED: ");
        __sb.Append(UNCOMPRESSED== null ? "<null>" : UNCOMPRESSED.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member