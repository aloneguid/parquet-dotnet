#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
/*
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;

using Thrift.Protocol;
using Thrift.Transport;

namespace Parquet.Thrift
{

  /// <summary>
  /// Integer logical type annotation
  /// 
  /// bitWidth must be 8, 16, 32, or 64.
  /// 
  /// Allowed for physical types: INT32, INT64
  /// </summary>

  public partial class IntType : TBase
  {

    public sbyte BitWidth { get; set; }

    public bool IsSigned { get; set; }

    public IntType() {
    }

    public IntType(sbyte bitWidth, bool isSigned) : this() {
      this.BitWidth = bitWidth;
      this.IsSigned = isSigned;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_bitWidth = false;
        bool isset_isSigned = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Byte) {
                BitWidth = iprot.ReadByte();
                isset_bitWidth = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Bool) {
                IsSigned = iprot.ReadBool();
                isset_isSigned = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_bitWidth)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_isSigned)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("IntType");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "bitWidth";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(BitWidth);
        oprot.WriteFieldEnd();
        field.Name = "isSigned";
        field.Type = TType.Bool;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsSigned);
        oprot.WriteFieldEnd();
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("IntType(");
      __sb.Append(", BitWidth: ");
      __sb.Append(BitWidth);
      __sb.Append(", IsSigned: ");
      __sb.Append(IsSigned);
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member