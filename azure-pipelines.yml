trigger:
  batch: true
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - README.md
      - doc/**/*

pr:
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - README.md
      - doc/**/*

variables:
  - name: vmImage
    value: 'ubuntu-latest'  # see https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml&viewFallbackFrom=vsts
  - name: v
    value: 3.8.5
  - name: av
    value: 3.0.0

stages:
- stage: Build
  jobs:
  - job: Core
    displayName: 'Core Build'
    pool:
      vmImage: $(vmImage)

    steps:

    - script: echo "##vso[build.updatebuildnumber]$(v)"

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'

    - task: DotNetCoreCLI@2
      displayName: 'build all'
      inputs:
        projects: src/Parquet.sln
        arguments: '-c release /p:Version=$(v) /p:FileVersion=$(v) /p:AssemblyVersion=$(av)'

    - task: CopyFiles@2
      displayName: 'copy generated nugets'
      inputs:
        SourceFolder: src
        Contents: '**/*.*nupkg'
        TargetFolder: ' $(build.artifactstagingdirectory)'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: 'archive nugets'
      inputs:
        ArtifactName: nuget

- stage: Test
  #condition: succeeded('Build')
  dependsOn: [] # remove explicit dependency, so it runs in parallel
  jobs:
  - job: Platform
    displayName: 'on'
    strategy:
      matrix:
        Windows:
           image: 'windows-2019'
        Linux:
           image: 'ubuntu-latest'
        MacOSX:
           image: 'macOS-10.14'
    pool:
      vmImage: $(image)
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
    - task: DotNetCoreCLI@2
      displayName: 'run tests'
      inputs:
        command: test
        projects: ./src/Parquet.sln
        arguments: '-c release'

- stage: Release
  dependsOn: ['Build', 'Test']
  condition: "and( eq(variables['Build.SourceBranch'], 'refs/heads/master'), succeeded('Build'), succeeded('Test') )"
  jobs:
  - deployment: NugetOrg
    displayName: 'nuget.org public feed'
    pool:
      vmImage: $(vmImage)
    environment: live
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'nuget'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: NuGetCommand@2
            displayName: nuget.org
            inputs:
              command: 'push'
              packagesToPush: '$(System.ArtifactsDirectory)/nuget/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'nuget.org'